{"version":3,"sources":["components/header/Header.js","components/ResponsiveDrawer/ResponsiveDrawer.js","Layout.js","App.js","serviceWorker.js","theme.js","redux/actions/categoriesActions/categoriesActions.js","redux/reducers/categoriesReducer.js","redux/store/store.js","index.js"],"names":["Header","props","theme","useTheme","Grid","container","justify","alignItems","style","height","background","palette","primary","dark","Typography","variant","color","align","AppBar","position","top","Toolbar","IconButton","onClick","handleDrawerOpen","useStyles","makeStyles","drawerHeader","padding","spacing","mixins","toolbar","ResponsiveDrawer","Drawer","anchor","width","open","isDrawerOpened","onClose","handleDrawerClose","className","Divider","List","map","i","ListItem","button","key","ListItemText","Layout","setState","handleOutsideDrawerClick","state","this","light","direction","Container","marginTop","Paper","Component","withTheme","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","createMuiTheme","createPalette","main","secondary","contrastThreshold","tonalOffset","categoriesActionTypes","GET_CATEGORIES","GET_CATEGORIES_SUCCESS","initialState","categories","isLoading","categoriesReducer","action","type","payload","combinedReducer","combineReducers","categoriesData","productsData","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","ThemeProvider","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3fe312b3.chunk.js","sourcesContent":["import AppBar from '@material-ui/core/AppBar';\nimport React from 'react';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Typography from '@material-ui/core/Typography';\nimport * as PropTypes from 'prop-types';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport Grid from '@material-ui/core/Grid';\n\nfunction Header(props) {\n  const theme = useTheme();\n  return (\n    <>\n      <Grid\n        container\n        justify=\"center\"\n        alignItems=\"center\"\n        style={{\n          height: '100px',\n          background: theme.palette.primary.dark,\n        }}>\n        <Typography\n          variant=\"h2\"\n          color=\"secondary\"\n          align=\"center\">\n          Placeholder\n        </Typography>\n\n      </Grid>\n      <AppBar position=\"sticky\" style={{ top: 0 }}>\n        <Toolbar>\n          <IconButton\n            color=\"inherit\"\n            onClick={props.handleDrawerOpen}>\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            variant=\"h5\">\n              Singularity\n          </Typography>\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n\nHeader.propTypes = {\n  handleDrawerOpen: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import Drawer from '@material-ui/core/Drawer';\nimport React from 'react';\nimport * as PropTypes from 'prop-types';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport Divider from '@material-ui/core/Divider';\nimport { makeStyles, useTheme } from '@material-ui/core';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles(theme => ({\n  drawerHeader: {\n    padding: `0 ${theme.spacing(1)}px`,\n    ...theme.mixins.toolbar,\n  },\n}));\n\nfunction ResponsiveDrawer(props) {\n  const theme = useTheme();\n\n  return (\n    <Drawer\n      anchor=\"left\"\n      width=\"240px\"\n      open={props.isDrawerOpened}\n      onClose={props.handleDrawerClose}>\n      <Grid\n        container\n        className={useStyles().drawerHeader}\n        alignItems=\"center\"\n        justify=\"flex-end\">\n        <IconButton onClick={props.handleDrawerClose}>\n          <ChevronLeftIcon />\n        </IconButton>\n      </Grid>\n      <Divider />\n      <div style={{ width: '240px' }}>\n        <List>\n          {[1, 2, 3, 4, 5].map(i => (\n            <ListItem\n              button\n              key={i}\n              style={{\n                padding:\n                    `${theme.spacing(2)}px \n                    ${theme.spacing(4)}px`,\n              }}>\n              <ListItemText primary={`Link ${i}`} />\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    </Drawer>\n  );\n}\n\nResponsiveDrawer.propTypes = {\n  isDrawerOpened: PropTypes.bool.isRequired,\n  handleDrawerClose: PropTypes.func.isRequired,\n};\n\nexport default ResponsiveDrawer;\n","import React, { Component } from 'react';\nimport { Grid } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Container from '@material-ui/core/Container';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport Header from './components/header/Header';\nimport ResponsiveDrawer from './components/ResponsiveDrawer/ResponsiveDrawer';\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDrawerOpened: false,\n    };\n  }\n\n    handleDrawerOpen = () => {\n      this.setState({ isDrawerOpened: true });\n    };\n\n    handleDrawerClose = () => {\n      this.setState({ isDrawerOpened: false });\n    };\n\n    handleOutsideDrawerClick = () => {\n      if (this.state.isDrawerOpened) {\n        this.handleDrawerClose();\n      }\n    };\n\n    render() {\n      const { theme } = this.props;\n      return (\n        <div style={{ background: theme.palette.background.light }}>\n          <ResponsiveDrawer\n            isDrawerOpened={this.state.isDrawerOpened}\n            handleDrawerClose={this.handleDrawerClose} />\n          <Grid\n            container\n            direction=\"column\"\n            justify=\"space-between\"\n            alignItems=\"stretch\"\n            onClick={this.handleOutsideDrawerClick}>\n            <Header handleDrawerOpen={this.handleDrawerOpen} />\n            <Container\n              style={{ marginTop: theme.spacing(4) }}>\n              <Paper>\n                <div style={{ height: '1000px' }} />\n              </Paper>\n            </Container>\n          </Grid>\n        </div>\n      );\n    }\n}\n\nexport default withTheme(Layout);\n","import React from 'react';\r\nimport './App.css';\r\nimport Layout from './Layout';\r\n\r\nfunction App() {\r\n  return (\r\n    <Layout />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import createMuiTheme from '@material-ui/core/styles/createMuiTheme';\nimport createPalette from '@material-ui/core/styles/createPalette';\n\nconst theme = createMuiTheme({\n  palette: createPalette({\n\n    primary: {\n      main: '#101d23',\n    },\n    secondary: {\n      main: '#00e5ff',\n    },\n    background: {\n      // main: 'rgba(0,229,255,0.04)',\n      light: 'rgba(21,48,56,0.16)',\n    },\n    contrastThreshold: 5,\n    tonalOffset: 0.3,\n  }),\n  spacing: 8,\n\n});\n\nexport default theme;\n","export const categoriesActionTypes = {\n  GET_CATEGORIES: '[CATEGORIES] Trying to get categories',\n  GET_CATEGORIES_SUCCESS: '[CATEGORIES] Successfully got all categories',\n};\n\nexport const getCategories = () => ({\n  type: categoriesActionTypes.GET_CATEGORIES,\n});\n\nexport const getCategoriesSuccess = categories => ({\n  type: categoriesActionTypes.GET_CATEGORIES_SUCCESS,\n  payload: categories,\n});\n","import { categoriesActionTypes } from '../actions/categoriesActions/categoriesActions';\n\nconst initialState = {\n  categories: [],\n  isLoading: true,\n};\nexport default function categoriesReducer(state = initialState, action) {\n  switch (action.type) {\n    case categoriesActionTypes.GET_CATEGORIES:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case categoriesActionTypes.GET_CATEGORIES_SUCCESS:\n      return {\n        ...state,\n        categories: action.payload,\n        isLoading: false,\n      };\n\n    default:\n      return state;\n  }\n}\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nimport categoriesReducer from '../reducers/categoriesReducer';\n\nconst combinedReducer = combineReducers({\n  categoriesData: categoriesReducer,\n  productsData: categoriesReducer,\n});\n\nconst store = createStore(combinedReducer, composeWithDevTools(\n  applyMiddleware(thunkMiddleware),\n));\n\nexport default store;\n","import ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport ThemeProvider from '@material-ui/styles/ThemeProvider';\r\nimport {Provider} from 'react-redux'\r\nimport React from 'react';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport theme from './theme';\r\nimport store from \"./redux/store/store\";\r\n\r\nReactDOM.render((\r\n        <Provider store={store}>\r\n            <ThemeProvider theme={theme}>\r\n                <App/>\r\n            </ThemeProvider>\r\n        </Provider>\r\n    ),\r\n    document.getElementById('root'));\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}